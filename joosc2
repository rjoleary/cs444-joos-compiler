#!/bin/bash

HIGHLIGHT_BEGIN=$(tput setf 2)
HIGHLIGHT_END=$(tput sgr0)

# Check extensions.
for FILE; do
    echo "$FILE" | grep '\.java$'; ret="$?"
    if [ "$ret" != 0 ]; then
        echo "Invalid filename"
        exit 42
    fi
done

# Tokenize and parse files individually.
for FILE; do
    TOKENS="${FILE%.java}.tokens"
    PARSE="${FILE%.java}.parse"
    AST="${FILE%.java}.ast"

    # Lexer
    cp "$FILE" test/joos_input.txt
    bin/lexer > "$TOKENS"; ret="$?"
    cp "$TOKENS" test/joos_tokens.txt
    case "$ret" in
        0) ;;
        42) exit 42; ;;
        *) echo "Exiting due to lexer error"; exit $ret; ;;
    esac

    # Parser
    bin/parser > "$PARSE"; ret="$?"
    cp "$PARSE" test/joos_parse.txt
    case "$ret" in
        0) ;;
        42) exit 42; ;;
        *) echo "Exiting due to parser error"; exit $ret; ;;
    esac

    # Weeder
    echo -n "$(basename "$FILE" .java)" > test/joos_classname.txt
    bin/weeder > /dev/null; ret="$?"
    case "$ret" in
        0) ;;
        42) exit 42; ;;
        *) echo "Exiting due to weeder error"; exit $ret; ;;
    esac

    bin/ast "$@" > "$AST"; ret="$?"
    sed "/AstTaggedToken/ n; s/Ast.*/$HIGHLIGHT_BEGIN\\0$HIGHLIGHT_END/" "$AST"
    # Print AST with AST nodes highlighted
    case "$ret" in
        0) ;;
        42) exit 42; ;;
        *) echo "Exiting due to AST error"; exit $ret; ;;
    esac
done
