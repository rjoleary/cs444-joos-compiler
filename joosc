#!/bin/bash

# Check for whitespace
for FILE; do
    if [[ $FILE = *[[:space:]]* ]]; then
        echo "Error: filename contains whitespace"
        exit 42
    fi
done

# Check extensions.
for FILE; do
    echo "$FILE" | grep '\.java$'; ret="$?"
    if [ "$ret" != 0 ]; then
        echo "Invalid filename"
        exit 42
    fi
done

# Tokenize and parse files individually.
for FILE; do
    TOKENS="${FILE%.java}.tokens"
    PARSE="${FILE%.java}.parse"
    CLASSNAME="$(basename "$FILE" .java)"

    # Reuse existing stdlib parse if the flag is set.
    if [ "$SKIP_STDLIB" != "" ] && [[ "$FILE" == test/stdlib/* ]]; then
      continue
    fi

    # Lexer
    bin/lexer "$FILE" > "$TOKENS"; ret="$?"
    case "$ret" in
        0) ;;
        42) exit 42; ;;
        *) echo "Exiting due to lexer error"; exit $ret; ;;
    esac

    # Parser
    bin/parser "$TOKENS" > "$PARSE"; ret="$?"
    case "$ret" in
        0) ;;
        42) exit 42; ;;
        *) echo "Exiting due to parser error"; exit $ret; ;;
    esac

    # Weeder
    bin/weeder "$CLASSNAME" "$FILE" "$TOKENS" "$PARSE"; ret="$?"
    case "$ret" in
        0) ;;
        42) exit 42; ;;
        *) echo "Exiting due to weeder error"; exit $ret; ;;
    esac
done

bin/compiler "$@"; ret="$?"
case "$ret" in
    0) ;;
    42) exit 42; ;;
    *) echo "Exiting due to compiler error"; exit 42; ;;
esac

cp def/fixed.s output
